<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' type='@' declared_type='NSString*' name='NSFAttribute'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFCalendarDate'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFDatatype'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFDomainKey'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFKey'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFKeyedArchive'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFKeys'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFMemoryDatabase'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFNanoObjectBehaviorException'/>
<constant const='true' type='i' declared_type='NSInteger' name='NSFNanoStoreErrorKey'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFNanoStoreUnableToManipulateStoreException'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFNonConformingNanoObjectProtocolException'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFObjectClass'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFP_ColumnIdentifier'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFP_DatatypeIdentifier'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFP_FullDatatypeIdentifier'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFP_SchemaTable'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFP_TableIdentifier'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFRowIDColumnName'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFTemporaryDatabase'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFUnexpectedParameterException'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFValue'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFValues'/>
<constant const='true' type='@' declared_type='NSString*' name='NSFVersionKey'/>
<constant const='true' type='i' declared_type='NSInteger' name='NSF_Private_InvalidParameterDataCodeKey'/>
<constant const='true' type='i' declared_type='NSInteger' name='NSF_Private_MacOSXErrorCodeKey'/>
<constant const='true' type='@' declared_type='NSString*' name='NSF_Private_NSFKeys_NSFKey'/>
<constant const='true' type='@' declared_type='NSString*' name='NSF_Private_NSFKeys_NSFKeyedArchive'/>
<constant const='true' type='@' declared_type='NSString*' name='NSF_Private_NSFNanoBag_NSFKey'/>
<constant const='true' type='@' declared_type='NSString*' name='NSF_Private_NSFNanoBag_NSFObjectKeys'/>
<constant const='true' type='@' declared_type='NSString*' name='NSF_Private_NSFNanoBag_Name'/>
<constant const='true' type='@' declared_type='NSString*' name='NSF_Private_NSFValues_NSFAttribute'/>
<constant const='true' type='@' declared_type='NSString*' name='NSF_Private_NSFValues_NSFKey'/>
<constant const='true' type='@' declared_type='NSString*' name='NSF_Private_NSFValues_NSFValue'/>
<constant const='true' type='@' declared_type='NSString*' name='NSF_Private_ToDeleteTableKey'/>
<constant const='true' type='@' declared_type='NSString*' name='kInternetConnection'/>
<constant const='true' type='@' declared_type='NSString*' name='kLocalWiFiConnection'/>
<constant const='true' type='@' declared_type='NSString*' name='kReachabilityChangedNotification'/>
<enum value='1' name='CacheAllData'/>
<enum value='2' name='CacheDataOnDemand'/>
<enum value='3' name='DoNotCacheData'/>
<enum value='0' name='JournalModeDelete'/>
<enum value='3' name='JournalModeMemory'/>
<enum value='5' name='JournalModeOFF'/>
<enum value='2' name='JournalModePersist'/>
<enum value='1' name='JournalModeTruncate'/>
<enum value='4' name='JournalModeWAL'/>
<enum value='0' name='MBProgressHUDAnimationFade'/>
<enum value='1' name='MBProgressHUDAnimationZoom'/>
<enum value='2' name='MBProgressHUDAnimationZoomIn'/>
<enum value='1' name='MBProgressHUDAnimationZoomOut'/>
<enum value='2' name='MBProgressHUDModeAnnularDeterminate'/>
<enum value='3' name='MBProgressHUDModeCustomView'/>
<enum value='1' name='MBProgressHUDModeDeterminate'/>
<enum value='0' name='MBProgressHUDModeIndeterminate'/>
<enum value='4' name='MBProgressHUDModeText'/>
<enum value='3' name='NSFAfterDate'/>
<enum value='1' name='NSFAnd'/>
<enum value='2' name='NSFAttributeColumn'/>
<enum value='1' name='NSFAverage'/>
<enum value='1' name='NSFBeforeDate'/>
<enum value='1' name='NSFBeginsWith'/>
<enum value='2' name='NSFContains'/>
<enum value='2' name='NSFCount'/>
<enum value='2' name='NSFEncodingUTF16'/>
<enum value='1' name='NSFEncodingUTF8'/>
<enum value='3' name='NSFEncodingUnknown'/>
<enum value='3' name='NSFEndsWith'/>
<enum value='1' name='NSFEngineProcessingDefaultMode'/>
<enum value='2' name='NSFEngineProcessingFastMode'/>
<enum value='0' name='NSFEqualTo'/>
<enum value='8' name='NSFGreaterThan'/>
<enum value='5' name='NSFInsensitiveBeginsWith'/>
<enum value='6' name='NSFInsensitiveContains'/>
<enum value='7' name='NSFInsensitiveEndsWith'/>
<enum value='4' name='NSFInsensitiveEqualTo'/>
<enum value='1' name='NSFKeyColumn'/>
<enum value='9' name='NSFLessThan'/>
<enum value='3' name='NSFMax'/>
<enum value='1' name='NSFMemoryStoreType'/>
<enum value='4' name='NSFMin'/>
<enum value='1' name='NSFNanoTypeData'/>
<enum value='3' name='NSFNanoTypeDate'/>
<enum value='5' name='NSFNanoTypeNULL'/>
<enum value='4' name='NSFNanoTypeNumber'/>
<enum value='0' name='NSFNanoTypeRowUID'/>
<enum value='2' name='NSFNanoTypeString'/>
<enum value='6' name='NSFNanoTypeURL'/>
<enum value='-1' name='NSFNanoTypeUnknown'/>
<enum value='10' name='NSFNotEqualTo'/>
<enum value='2' name='NSFOnDate'/>
<enum value='2' name='NSFOr'/>
<enum value='3' name='NSFPersistentStoreType'/>
<enum value='2' name='NSFReturnKeys'/>
<enum value='1' name='NSFReturnObjects'/>
<enum value='2' name='NSFTemporaryStoreType'/>
<enum value='5' name='NSFTotal'/>
<enum value='3' name='NSFValueColumn'/>
<enum value='0' name='NotReachable'/>
<enum value='1' name='ReachableViaWWAN'/>
<enum value='2' name='ReachableViaWiFi'/>
<enum value='2' name='SynchronousModeFull'/>
<enum value='1' name='SynchronousModeNormal'/>
<enum value='0' name='SynchronousModeOff'/>
<enum value='0' name='TempStoreModeDefault'/>
<enum value='1' name='TempStoreModeFile'/>
<enum value='2' name='TempStoreModeMemory'/>
<enum value='1' name='USE_DDG_EXTENSIONS'/>
<enum value='1' name='XMLReaderOptionsProcessNamespaces'/>
<enum value='2' name='XMLReaderOptionsReportNamespacePrefixes'/>
<enum value='4' name='XMLReaderOptionsResolveExternalEntities'/>
<enum value='0' name='kNotReachable'/>
<enum value='1' name='kReachableViaWWAN'/>
<enum value='2' name='kReachableViaWiFi'/>
<function name='NSFIsDebugOn'>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSFNanoDatatypeFromString'>
<arg type='@' declared_type='NSString*' name='aNanoDatatype'/>
<retval type='i' declared_type='NSFNanoDatatype'/>
</function>
<function name='NSFSetIsDebugOn'>
<arg type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSFStringFromMatchType'>
<arg type='i' declared_type='NSFMatchType' name='aMatchType'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSFStringFromNanoDataType'>
<arg type='i' declared_type='NSFNanoDatatype' name='aNanoDatatype'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='safeJSONArrayFromArray'>
<arg type='@' declared_type='NSArray*' name='array'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='safeJSONDictionaryFromDictionary'>
<arg type='@' declared_type='NSDictionary*' name='dictionary'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='safeJSONObjectFromObject'>
<arg type='@' declared_type='id' name='object'/>
<retval type='@' declared_type='id'/>
</function>
<class name='MBProgressHUD'>
<method class_method='true' selector='HUDForView:'>
<arg index='0' type='@' declared_type='UIView*' name='view'/>
<retval type='@' declared_type='MBProgressHUD*'/>
</method>
<method class_method='true' selector='allHUDsForView:'>
<arg index='0' type='@' declared_type='UIView*' name='view'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='animationType'>
<retval type='i' declared_type='MBProgressHUDAnimation'/>
</method>
<method selector='color'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='completionBlock'>
<retval function_pointer='true' type='@?' declared_type='MBProgressHUDCompletionBlock'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='customView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='detailsLabelFont'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='detailsLabelText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dimBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='graceTime'>
<retval type='f' declared_type='float'/>
</method>
<method selector='hide:'>
<arg index='0' type='B' declared_type='BOOL' name='animated'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hide:afterDelay:'>
<arg index='0' type='B' declared_type='BOOL' name='animated'/>
<arg index='1' type='d' declared_type='NSTimeInterval' name='delay'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='hideAllHUDsForView:animated:'>
<arg index='0' type='@' declared_type='UIView*' name='view'/>
<arg index='1' type='B' declared_type='BOOL' name='animated'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='hideHUDForView:animated:'>
<arg index='0' type='@' declared_type='UIView*' name='view'/>
<arg index='1' type='B' declared_type='BOOL' name='animated'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithView:'>
<arg index='0' type='@' declared_type='UIView*' name='view'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWindow:'>
<arg index='0' type='@' declared_type='UIWindow*' name='window'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSquare'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='labelFont'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='labelText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='margin'>
<retval type='f' declared_type='float'/>
</method>
<method selector='minShowTime'>
<retval type='f' declared_type='float'/>
</method>
<method selector='minSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='mode'>
<retval type='i' declared_type='MBProgressHUDMode'/>
</method>
<method selector='opacity'>
<retval type='f' declared_type='float'/>
</method>
<method selector='progress'>
<retval type='f' declared_type='float'/>
</method>
<method selector='removeFromSuperViewOnHide'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAnimationType:'>
<arg index='0' type='i' declared_type='MBProgressHUDAnimation' name='animationType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompletionBlock:'>
<arg index='0' function_pointer='true' type='@?' declared_type='MBProgressHUDCompletionBlock' name='completionBlock'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCustomView:'>
<arg index='0' type='@' declared_type='UIView*' name='customView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDetailsLabelFont:'>
<arg index='0' type='@' declared_type='UIFont*' name='detailsLabelFont'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDetailsLabelText:'>
<arg index='0' type='@' declared_type='NSString*' name='detailsLabelText'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDimBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='dimBackground'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGraceTime:'>
<arg index='0' type='f' declared_type='float' name='graceTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelFont:'>
<arg index='0' type='@' declared_type='UIFont*' name='labelFont'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelText:'>
<arg index='0' type='@' declared_type='NSString*' name='labelText'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMargin:'>
<arg index='0' type='f' declared_type='float' name='margin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinShowTime:'>
<arg index='0' type='f' declared_type='float' name='minShowTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinSize:'>
<arg index='0' type='{CGSize=ff}' declared_type='CGSize' name='minSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMode:'>
<arg index='0' type='i' declared_type='MBProgressHUDMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' type='f' declared_type='float' name='opacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgress:'>
<arg index='0' type='f' declared_type='float' name='progress'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRemoveFromSuperViewOnHide:'>
<arg index='0' type='B' declared_type='BOOL' name='removeFromSuperViewOnHide'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSquare:'>
<arg index='0' type='B' declared_type='BOOL' name='square'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTaskInProgress:'>
<arg index='0' type='B' declared_type='BOOL' name='taskInProgress'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setXOffset:'>
<arg index='0' type='f' declared_type='float' name='xOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYOffset:'>
<arg index='0' type='f' declared_type='float' name='yOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='show:'>
<arg index='0' type='B' declared_type='BOOL' name='animated'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAnimated:whileExecutingBlock:'>
<arg index='0' type='B' declared_type='BOOL' name='animated'/>
<arg index='1' function_pointer='true' type='@?' declared_type='dispatch_block_t' name='block'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAnimated:whileExecutingBlock:completionBlock:'>
<arg index='0' type='B' declared_type='BOOL' name='animated'/>
<arg index='1' function_pointer='true' type='@?' declared_type='dispatch_block_t' name='block'>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' function_pointer='true' type='@?' declared_type='MBProgressHUDCompletionBlock' name='completion'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAnimated:whileExecutingBlock:onQueue:'>
<arg index='0' type='B' declared_type='BOOL' name='animated'/>
<arg index='1' function_pointer='true' type='@?' declared_type='dispatch_block_t' name='block'>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@' declared_type='dispatch_queue_t' name='queue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAnimated:whileExecutingBlock:onQueue:completionBlock:'>
<arg index='0' type='B' declared_type='BOOL' name='animated'/>
<arg index='1' function_pointer='true' type='@?' declared_type='dispatch_block_t' name='block'>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@' declared_type='dispatch_queue_t' name='queue'/>
<arg index='3' function_pointer='true' type='@?' declared_type='MBProgressHUDCompletionBlock' name='completion'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='showHUDAddedTo:animated:'>
<arg index='0' type='@' declared_type='UIView*' name='view'/>
<arg index='1' type='B' declared_type='BOOL' name='animated'/>
<retval type='@' declared_type='MBProgressHUD*'/>
</method>
<method selector='showWhileExecuting:onTarget:withObject:animated:'>
<arg index='0' type=':' declared_type='SEL' name='method'/>
<arg index='1' type='@' declared_type='id' name='target'/>
<arg index='2' type='@' declared_type='id' name='object'/>
<arg index='3' type='B' declared_type='BOOL' name='animated'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='taskInProgress'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='xOffset'>
<retval type='f' declared_type='float'/>
</method>
<method selector='yOffset'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='MBRoundProgressView'>
<method selector='backgroundTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='isAnnular'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='progress'>
<retval type='f' declared_type='float'/>
</method>
<method selector='progressTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='setAnnular:'>
<arg index='0' type='B' declared_type='BOOL' name='annular'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundTintColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='backgroundTintColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgress:'>
<arg index='0' type='f' declared_type='float' name='progress'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgressTintColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='progressTintColor'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSFNanoBag'>
<method selector='JSONDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='_inflateObjectsWithKeys:'>
<arg index='0' type='@' declared_type='NSArray*' name='someKeys'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='_saveInStore:error:'>
<arg index='0' type='@' declared_type='NSFNanoStore*' name='someStore'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='_setStore:'>
<arg index='0' type='@' declared_type='NSFNanoStore*' name='aStore'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObject:error:'>
<arg index='0' type='@' declared_type='id' name='theObject'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg index='0' type='@' declared_type='NSArray*' name='theObjects'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='bag'>
<retval type='@' declared_type='NSFNanoBag*'/>
</method>
<method class_method='true' selector='bagWithName:'>
<arg index='0' type='@' declared_type='NSString*' name='theName'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='bagWithName:andObjects:'>
<arg index='0' type='@' declared_type='NSString*' name='theName'/>
<arg index='1' type='@' declared_type='NSArray*' name='theObjects'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='bagWithObjects:'>
<arg index='0' type='@' declared_type='NSArray*' name='theObjects'/>
<retval type='@' declared_type='NSFNanoBag*'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='deflateBag'>
<retval type='v' declared_type='void'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='hasUnsavedChanges'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='inflateBag'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initBagWithName:andObjects:'>
<arg index='0' type='@' declared_type='NSString*' name='theName'/>
<arg index='1' type='@' declared_type='NSArray*' name='someObjects'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToNanoBag:'>
<arg index='0' type='@' declared_type='NSFNanoBag*' name='otherNanoBag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='reloadBagWithError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg index='0' type='@' declared_type='id' name='theObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectWithKey:'>
<arg index='0' type='@' declared_type='NSString*' name='theObjectKey'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInArray:'>
<arg index='0' type='@' declared_type='NSArray*' name='theObjects'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsWithKeysInArray:'>
<arg index='0' type='@' declared_type='NSArray*' name='theKeys'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removedObjects'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='saveAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='savedObjects'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='setName:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStore:'>
<arg index='0' type='@' declared_type='NSFNanoStore*' name='store'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='store'>
<retval type='@' declared_type='NSFNanoStore*'/>
</method>
<method selector='undoChangesWithError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unsavedObjects'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSFNanoEngine'>
<method selector='JSONDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='NSFEncodingTypeToNSString:'>
<arg index='0' type='i' declared_type='NSFEncodingType' name='value'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='NSFP_ROWIDPresenceLocation:datatypes:'>
<arg index='0' type='@' declared_type='NSArray*' name='tableColumns'/>
<arg index='1' type='@' declared_type='NSArray*' name='datatypes'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='NSFP_beginTransactionMode:'>
<arg index='0' type='@' declared_type='NSString*' name='theSQLStatement'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='NSFP_cacheMethodToString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='NSFP_createTable:withColumns:datatypes:isTemporary:'>
<arg index='0' type='@' declared_type='NSString*' name='table'/>
<arg index='1' type='@' declared_type='NSArray*' name='tableColumns'/>
<arg index='2' type='@' declared_type='NSArray*' name='tableDatatypes'/>
<arg index='3' type='B' declared_type='BOOL' name='isTemporaryFlag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='NSFP_datatypeForColumn:'>
<arg index='0' type='@' declared_type='NSString*' name='tableAndColumn'/>
<retval type='i' declared_type='NSFNanoDatatype'/>
</method>
<method selector='NSFP_datatypeForTable:column:'>
<arg index='0' type='@' declared_type='NSString*' name='table'/>
<arg index='1' type='@' declared_type='NSString*' name='column'/>
<retval type='i' declared_type='NSFNanoDatatype'/>
</method>
<method class_method='true' selector='NSFP_decodeQuantum:andSource:'>
<arg index='0' type='*' declared_type='unsigned char*' name='dest'/>
<arg const='true' index='1' type='*' declared_type='char*' name='src'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='NSFP_flattenAllTables'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='NSFP_insertStringValues:forColumns:table:'>
<arg index='0' type='@' declared_type='NSArray*' name='values'/>
<arg index='1' type='@' declared_type='NSArray*' name='columns'/>
<arg index='2' type='@' declared_type='NSString*' name='table'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='NSFP_installCommitCallback'>
<retval type='v' declared_type='void'/>
</method>
<method selector='NSFP_isColumnROWIDAlias:forTable:'>
<arg index='0' type='@' declared_type='NSString*' name='column'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='NSFP_nestedDescriptionWithPrefixedSpace:'>
<arg index='0' type='@' declared_type='NSString*' name='prefixedSpace'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='NSFP_prefixWithDotDelimiter:'>
<arg index='0' type='@' declared_type='NSString*' name='tableAndColumn'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='NSFP_prepareSQLite3Statement:theSQLStatement:'>
<arg index='0' type='^^{sqlite3_stmt}' declared_type='sqlite3_stmt**' name='aStatement'/>
<arg index='1' type='@' declared_type='NSString*' name='aSQLQuery'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='NSFP_rebuildDatatypeCache'>
<retval type='v' declared_type='void'/>
</method>
<method selector='NSFP_removeColumn:fromTable:'>
<arg index='0' type='@' declared_type='NSString*' name='column'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='NSFP_setFullColumnNamesEnabled'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='NSFP_sharedROWIDKeywords'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='NSFP_sqlString:appendingTags:'>
<arg index='0' type='@' declared_type='NSMutableString*' name='theSQLStatement'/>
<arg index='1' type='@' declared_type='NSArray*' name='columns'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='NSFP_sqlString:appendingTags:quoteTags:'>
<arg index='0' type='@' declared_type='NSMutableString*' name='theSQLStatement'/>
<arg index='1' type='@' declared_type='NSArray*' name='tags'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='NSFP_sqlString:forTable:withColumns:datatypes:'>
<arg index='0' type='@' declared_type='NSMutableString*' name='theSQLStatement'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<arg index='2' type='@' declared_type='NSArray*' name='columns'/>
<arg index='3' type='@' declared_type='NSArray*' name='datatypes'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='NSFP_stripBitsFromExtendedResultCode:'>
<arg index='0' type='i' declared_type='int' name='extendedResult'/>
<retval type='i' declared_type='int'/>
</method>
<method selector='NSFP_suffixWithDotDelimiter:'>
<arg index='0' type='@' declared_type='NSString*' name='tableAndColumn'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='NSFP_uninstallCommitCallback'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='NSStringToNSFEncodingType:'>
<arg index='0' type='@' declared_type='NSString*' name='value'/>
<retval type='i' declared_type='NSFEncodingType'/>
</method>
<method class_method='true' selector='_plistToDictionary:'>
<arg index='0' type='@' declared_type='NSString*' name='aPlist'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='allTables'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='beginDeferredTransaction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='beginTransaction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='busyTimeout'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='cacheMethod'>
<retval type='i' declared_type='NSFCacheMethod'/>
</method>
<method selector='cacheSize'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='close'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='columnsForTable:'>
<arg index='0' type='@' declared_type='NSString*' name='theTable'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='commitTransaction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='compact'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createIndexForColumn:table:isUnique:'>
<arg index='0' type='@' declared_type='NSString*' name='theColumn'/>
<arg index='1' type='@' declared_type='NSString*' name='theTable'/>
<arg index='2' type='B' declared_type='BOOL' name='isUnique'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createTable:withColumns:datatypes:'>
<arg index='0' type='@' declared_type='NSString*' name='theTable'/>
<arg index='1' type='@' declared_type='NSArray*' name='theColumns'/>
<arg index='2' type='@' declared_type='NSArray*' name='theDatatypes'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='databaseWithPath:'>
<arg index='0' type='@' declared_type='NSString*' name='thePath'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='datatypesForTable:'>
<arg index='0' type='@' declared_type='NSString*' name='theTable'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='decodeDataFromBase64:'>
<arg index='0' type='@' declared_type='NSString*' name='theEncodedData'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dictionaryDescription'>
<retval type='@' declared_type='NSFOrderedDictionary*'/>
</method>
<method selector='dropIndex:'>
<arg index='0' type='@' declared_type='NSString*' name='theIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dropTable:'>
<arg index='0' type='@' declared_type='NSString*' name='theTable'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='encodeDataToBase64:'>
<arg index='0' type='@' declared_type='NSData*' name='theData'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='encoding'>
<retval type='i' declared_type='NSFEncodingType'/>
</method>
<method selector='executeSQL:'>
<arg index='0' type='@' declared_type='NSString*' name='theSQLStatement'/>
<retval type='@' declared_type='NSFNanoResult*'/>
</method>
<method selector='indexedColumnsForTable:'>
<arg index='0' type='@' declared_type='NSString*' name='theTable'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='indexes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithPath:'>
<arg index='0' type='@' declared_type='NSString*' name='thePath'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='integrityCheck'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDatabaseOpen'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTransactionActive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='journalModeAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='i' declared_type='NSFJournalModeMode'/>
</method>
<method selector='maxRowUIDForTable:'>
<arg index='0' type='@' declared_type='NSString*' name='theTable'/>
<retval type='q' declared_type='long long'/>
</method>
<method class_method='true' selector='nanoStoreEngineVersion'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='openWithCacheMethod:useFastMode:'>
<arg index='0' type='i' declared_type='NSFCacheMethod' name='theCacheMethod'/>
<arg index='1' type='B' declared_type='BOOL' name='useFastMode'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pageSize'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='path'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='recommendedCacheSize'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='rollbackTransaction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBusyTimeout:'>
<arg index='0' type='I' declared_type='unsigned int' name='theTimeout'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCacheMethod:'>
<arg index='0' type='i' declared_type='NSFCacheMethod' name='cacheMethod'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCacheSize:'>
<arg index='0' type='I' declared_type='NSUInteger' name='numberOfPages'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setEncodingType:'>
<arg index='0' type='i' declared_type='NSFEncodingType' name='theEncodingType'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setJournalMode:'>
<arg index='0' type='i' declared_type='NSFJournalModeMode' name='theMode'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setPageSize:'>
<arg index='0' type='I' declared_type='NSUInteger' name='numberOfBytes'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setSynchronousMode:'>
<arg index='0' type='i' declared_type='NSFSynchronousMode' name='theSynchronousMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTempStoreMode:'>
<arg index='0' type='i' declared_type='NSFTempStoreMode' name='theTempStoreMode'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedNanoStoreEngineDatatypes'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='sqlite'>
<retval type='^{sqlite3=}' declared_type='sqlite3*'/>
</method>
<method class_method='true' selector='sqliteVersion'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='stringWithUUID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='synchronousMode'>
<retval type='i' declared_type='NSFSynchronousMode'/>
</method>
<method class_method='true' selector='systemPageSize'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='tables'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tempStoreMode'>
<retval type='i' declared_type='NSFTempStoreMode'/>
</method>
<method selector='temporaryTables'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSFNanoExpression'>
<method selector='JSONDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addPredicate:withOperator:'>
<arg index='0' type='@' declared_type='NSFNanoPredicate*' name='thePredicate'/>
<arg index='1' type='i' declared_type='NSFOperator' name='theOperator'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='arrayDescription'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='expressionWithPredicate:'>
<arg index='0' type='@' declared_type='NSFNanoPredicate*' name='thePredicate'/>
<retval type='@' declared_type='NSFNanoExpression*'/>
</method>
<method selector='initWithPredicate:'>
<arg index='0' type='@' declared_type='NSFNanoPredicate*' name='thePredicate'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='operators'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='predicates'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSFNanoObject'>
<method selector='JSONDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='_NSObjectToJSONString:error:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<arg index='1' type='^@' declared_type='NSError**' name='error'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='_safeArrayFromArray:'>
<arg index='0' type='@' declared_type='NSArray*' name='array'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='_safeDictionaryFromDictionary:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='dictionary'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='_safeObjectFromObject:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='_setOriginalClassString:'>
<arg index='0' type='@' declared_type='NSString*' name='theClassString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addEntriesFromDictionary:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='otherDictionary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='info'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initFromDictionaryRepresentation:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='theDictionary'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFromDictionaryRepresentation:key:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='theDictionary'/>
<arg index='1' type='@' declared_type='NSString*' name='theKey'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToNanoObject:'>
<arg index='0' type='@' declared_type='NSFNanoObject*' name='otherNanoObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='nanoObject'>
<retval type='@' declared_type='NSFNanoObject*'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='theDictionary'/>
<retval type='@' declared_type='NSFNanoObject*'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:key:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='theDictionary'/>
<arg index='1' type='@' declared_type='NSString*' name='theKey'/>
<retval type='@' declared_type='NSFNanoObject*'/>
</method>
<method selector='objectForKey:'>
<arg index='0' type='@' declared_type='NSString*' name='aKey'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='originalClassString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg index='0' type='@' declared_type='NSString*' name='aKey'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg index='0' type='@' declared_type='NSArray*' name='keyArray'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setObject:forKey:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<arg index='1' type='@' declared_type='NSString*' name='aKey'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStore:'>
<arg index='0' type='@' declared_type='NSFNanoStore*' name='store'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='store'>
<retval type='@' declared_type='NSFNanoStore*'/>
</method>
</class>
<class name='NSFNanoPredicate'>
<method selector='JSONDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='column'>
<retval type='i' declared_type='NSFTableColumnType'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithColumn:matching:value:'>
<arg index='0' type='i' declared_type='NSFTableColumnType' name='theType'/>
<arg index='1' type='i' declared_type='NSFMatchType' name='theMatch'/>
<arg index='2' type='@' declared_type='id' name='theValue'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='match'>
<retval type='i' declared_type='NSFMatchType'/>
</method>
<method class_method='true' selector='predicateWithColumn:matching:value:'>
<arg index='0' type='i' declared_type='NSFTableColumnType' name='theType'/>
<arg index='1' type='i' declared_type='NSFMatchType' name='theMatch'/>
<arg index='2' type='@' declared_type='id' name='theValue'/>
<retval type='@' declared_type='NSFNanoPredicate*'/>
</method>
<method selector='value'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSFNanoResult'>
<method selector='JSONDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='_calculateNumberOfRows'>
<retval type='v' declared_type='void'/>
</method>
<method selector='_initWithDictionary:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='results'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='_initWithError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='_reset'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='_resultWithDictionary:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='results'/>
<retval type='@' declared_type='NSFNanoResult*'/>
</method>
<method class_method='true' selector='_resultWithError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='@' declared_type='NSFNanoResult*'/>
</method>
<method selector='_setError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='columns'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='firstValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='numberOfRows'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueAtIndex:forColumn:'>
<arg index='0' type='I' declared_type='NSUInteger' name='theIndex'/>
<arg index='1' type='@' declared_type='NSString*' name='theColumn'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='valuesForColumn:'>
<arg index='0' type='@' declared_type='NSString*' name='theColumn'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='writeToFile:'>
<arg index='0' type='@' declared_type='NSString*' name='thePath'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSFNanoSearch'>
<method selector='JSONDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:'>
<arg index='0' type='@' declared_type='NSString*' name='aKey'/>
<arg index='1' type='@' declared_type='NSString*' name='anAttribute'/>
<arg index='2' type='@' declared_type='NSString*' name='aValue'/>
<arg index='3' type='i' declared_type='NSFMatchType' name='match'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:returning:'>
<arg index='0' type='@' declared_type='NSString*' name='aKey'/>
<arg index='1' type='@' declared_type='NSString*' name='anAttribute'/>
<arg index='2' type='@' declared_type='NSString*' name='aValue'/>
<arg index='3' type='i' declared_type='NSFMatchType' name='match'/>
<arg index='4' type='i' declared_type='NSFReturnType' name='returnedObjectType'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='_dictionaryForKeyPath:value:'>
<arg index='0' type='@' declared_type='NSString*' name='keyPath'/>
<arg index='1' type='@' declared_type='id' name='value'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='_prepareSQLQueryStringWithExpressions:'>
<arg index='0' type='@' declared_type='NSArray*' name='someExpressions'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='_prepareSQLQueryStringWithKey:attribute:value:matching:'>
<arg index='0' type='@' declared_type='NSString*' name='aKey'/>
<arg index='1' type='@' declared_type='NSString*' name='anAttribute'/>
<arg index='2' type='@' declared_type='id' name='aValue'/>
<arg index='3' type='i' declared_type='NSFMatchType' name='match'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='_prepareSQLQueryStringWithKeys:'>
<arg index='0' type='@' declared_type='NSArray*' name='someKeys'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='_preparedSQL'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='_querySegmentForAttributeColumnWithValue:matching:valueColumnWithValue:'>
<arg index='0' type='@' declared_type='id' name='anAttributeValue'/>
<arg index='1' type='i' declared_type='NSFMatchType' name='match'/>
<arg index='2' type='@' declared_type='id' name='aValue'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='_querySegmentForColumn:value:matching:'>
<arg index='0' type='@' declared_type='NSString*' name='aColumn'/>
<arg index='1' type='@' declared_type='id' name='aValue'/>
<arg index='2' type='i' declared_type='NSFMatchType' name='match'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='_quoteStrings:joiningWithDelimiter:'>
<arg index='0' type='@' declared_type='NSArray*' name='strings'/>
<arg index='1' type='@' declared_type='NSString*' name='delimiter'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='_resultsFromSQLQuery:'>
<arg index='0' type='@' declared_type='NSString*' name='theSQLStatement'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='_retrieveDataAdded:calendarDate:error:'>
<arg index='0' type='i' declared_type='NSFDateMatchType' name='aDateMatch'/>
<arg index='1' type='@' declared_type='NSDate*' name='aDate'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='_retrieveDataWithError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='_sortResultsIfApplicable:returnType:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='results'/>
<arg index='1' type='i' declared_type='NSFReturnType' name='theReturnType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='aggregateOperation:onAttribute:'>
<arg index='0' type='i' declared_type='NSFAggregateFunctionType' name='theFunctionType'/>
<arg index='1' type='@' declared_type='NSString*' name='theAttribute'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='attribute'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='attributesToBeReturned'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='bag'>
<retval type='@' declared_type='NSFNanoBag*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='executeSQL:'>
<arg index='0' type='@' declared_type='NSString*' name='theSQLStatement'/>
<retval type='@' declared_type='NSFNanoResult*'/>
</method>
<method selector='executeSQL:returnType:error:'>
<arg index='0' type='@' declared_type='NSString*' name='theSQLStatement'/>
<arg index='1' type='i' declared_type='NSFReturnType' name='theReturnType'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='explainSQL:'>
<arg index='0' type='@' declared_type='NSString*' name='theSQLStatement'/>
<retval type='@' declared_type='NSFNanoResult*'/>
</method>
<method selector='expressions'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='filterClass'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='groupValues'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithStore:'>
<arg index='0' type='@' declared_type='NSFNanoStore*' name='theNanoStore'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='limit'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='match'>
<retval type='i' declared_type='NSFMatchType'/>
</method>
<method selector='nanoStore'>
<retval type='@' declared_type='NSFNanoStore*'/>
</method>
<method selector='offset'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='reset'>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchObjectsAdded:date:returnType:error:'>
<arg index='0' type='i' declared_type='NSFDateMatchType' name='theDateMatch'/>
<arg index='1' type='@' declared_type='NSDate*' name='theDate'/>
<arg index='2' type='i' declared_type='NSFReturnType' name='theReturnType'/>
<arg index='3' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='searchObjectsWithReturnType:error:'>
<arg index='0' type='i' declared_type='NSFReturnType' name='theReturnType'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='searchWithStore:'>
<arg index='0' type='@' declared_type='NSFNanoStore*' name='theNanoStore'/>
<retval type='@' declared_type='NSFNanoSearch*'/>
</method>
<method selector='setAttribute:'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributesToBeReturned:'>
<arg index='0' type='@' declared_type='NSArray*' name='attributesToBeReturned'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBag:'>
<arg index='0' type='@' declared_type='NSFNanoBag*' name='bag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExpressions:'>
<arg index='0' type='@' declared_type='NSArray*' name='expressions'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFilterClass:'>
<arg index='0' type='@' declared_type='NSString*' name='filterClass'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupValues:'>
<arg index='0' type='B' declared_type='BOOL' name='groupValues'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKey:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLimit:'>
<arg index='0' type='I' declared_type='NSUInteger' name='limit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMatch:'>
<arg index='0' type='i' declared_type='NSFMatchType' name='match'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNanoStore:'>
<arg index='0' type='@' declared_type='NSFNanoStore*' name='nanoStore'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffset:'>
<arg index='0' type='I' declared_type='NSUInteger' name='offset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSort:'>
<arg index='0' type='@' declared_type='NSArray*' name='sort'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:'>
<arg index='0' type='@' declared_type='id' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sort'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sql'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='value'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSFNanoSortDescriptor'>
<method selector='JSONDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='attribute'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithAttribute:ascending:'>
<arg index='0' type='@' declared_type='NSString*' name='theAttribute'/>
<arg index='1' type='B' declared_type='BOOL' name='ascending'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAscending'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='sortDescriptorWithAttribute:ascending:'>
<arg index='0' type='@' declared_type='NSString*' name='theAttribute'/>
<arg index='1' type='B' declared_type='BOOL' name='ascending'/>
<retval type='@' declared_type='NSFNanoSortDescriptor*'/>
</method>
</class>
<class name='NSFNanoStore'>
<method selector='JSONDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='_NSFDatatypeOfObject:'>
<arg index='0' type='@' declared_type='id' name='value'/>
<retval type='i' declared_type='NSFNanoDatatype'/>
</method>
<method selector='__storeDictionaries:forKeys:error:'>
<arg index='0' type='@' declared_type='NSArray*' name='someObjects'/>
<arg index='1' type='@' declared_type='NSArray*' name='someKeys'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='_addObjectsFromArray:forceSave:error:'>
<arg index='0' type='@' declared_type='NSArray*' name='someObjects'/>
<arg index='1' type='B' declared_type='BOOL' name='forceSave'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='_backupFileStoreToDirectoryAtPath:extension:compact:error:'>
<arg index='0' type='@' declared_type='NSString*' name='aPath'/>
<arg index='1' type='@' declared_type='NSString*' name='anExtension'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<arg index='3' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='_backupMemoryStoreToDirectoryAtPath:extension:compact:error:'>
<arg index='0' type='@' declared_type='NSString*' name='aPath'/>
<arg index='1' type='@' declared_type='NSString*' name='anExtension'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<arg index='3' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='_bindValue:forAttribute:parameterNumber:usingSQLite3Statement:'>
<arg index='0' type='@' declared_type='id' name='aValue'/>
<arg index='1' type='@' declared_type='NSString*' name='anAttribute'/>
<arg index='2' type='i' declared_type='NSInteger' name='aParamNumber'/>
<arg index='3' type='^{sqlite3_stmt=}' declared_type='sqlite3_stmt*' name='aStatement'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='_calendarDateToString:'>
<arg index='0' type='@' declared_type='NSDate*' name='aDate'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='_checkNanoStoreIsReadyAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='_createAndOpenDebugDatabase'>
<retval type='@' declared_type='NSFNanoStore*'/>
</method>
<method class_method='true' selector='_defaultTestData'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='_executeSQL:'>
<arg index='0' type='@' declared_type='NSString*' name='theSQLStatement'/>
<retval type='@' declared_type='NSFNanoResult*'/>
</method>
<method selector='_executeSQLite3StepUsingSQLite3Statement:'>
<arg index='0' type='^{sqlite3_stmt=}' declared_type='sqlite3_stmt*' name='aStatement'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='_flattenCollection:keyPath:keys:values:'>
<arg index='0' type='@' declared_type='id' name='someObject'/>
<arg index='1' type='^@' declared_type='NSMutableArray**' name='aKeyPath'/>
<arg index='2' type='^@' declared_type='NSMutableArray**' name='someKeys'/>
<arg index='3' type='^@' declared_type='NSMutableArray**' name='someValues'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='_flattenCollection:keys:values:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='info'/>
<arg index='1' type='^@' declared_type='NSMutableArray**' name='flattenedKeys'/>
<arg index='2' type='^@' declared_type='NSMutableArray**' name='flattenedValues'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='_initializePreparedStatementsWithError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='_isOurTransaction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='_nestedDescriptionWithPrefixedSpace:'>
<arg index='0' type='@' declared_type='NSString*' name='prefixedSpace'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='_prepareSQLite3Statement:theSQLStatement:'>
<arg index='0' type='^^{sqlite3_stmt}' declared_type='sqlite3_stmt**' name='aStatement'/>
<arg index='1' type='@' declared_type='NSString*' name='aSQLQuery'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='_releasePreparedStatements'>
<retval type='v' declared_type='void'/>
</method>
<method selector='_setIsOurTransaction:'>
<arg index='0' type='B' declared_type='BOOL' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='_setupCachingSchema'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='_storeDictionary:forKey:forClassNamed:error:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='someInfo'/>
<arg index='1' type='@' declared_type='NSString*' name='aKey'/>
<arg index='2' type='@' declared_type='NSString*' name='classType'/>
<arg index='3' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='_stringFromValue:'>
<arg index='0' type='@' declared_type='id' name='aValue'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addObject:error:'>
<arg index='0' type='@' declared_type='id' name='theObject'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg index='0' type='@' declared_type='NSArray*' name='theObjects'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allObjectClasses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='bagWithName:'>
<arg index='0' type='@' declared_type='NSString*' name='theName'/>
<retval type='@' declared_type='NSFNanoBag*'/>
</method>
<method selector='bags'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='bagsContainingObjectWithKey:'>
<arg index='0' type='@' declared_type='NSString*' name='theKey'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='bagsWithKeysInArray:'>
<arg index='0' type='@' declared_type='NSArray*' name='theKeys'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='bagsWithName:'>
<arg index='0' type='@' declared_type='NSString*' name='theName'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='beginTransactionAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='clearIndexesAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='closeWithError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='commitTransactionAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='compactStoreAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='countOfObjectsOfClassNamed:'>
<arg index='0' type='@' declared_type='NSString*' name='theClassName'/>
<retval type='q' declared_type='long long'/>
</method>
<method class_method='true' selector='createAndOpenStoreWithType:path:error:'>
<arg index='0' type='i' declared_type='NSFNanoStoreType' name='theType'/>
<arg index='1' type='@' declared_type='NSString*' name='thePath'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='@' declared_type='NSFNanoStore*'/>
</method>
<method class_method='true' selector='createStoreWithType:path:'>
<arg index='0' type='i' declared_type='NSFNanoStoreType' name='theType'/>
<arg index='1' type='@' declared_type='NSString*' name='thePath'/>
<retval type='@' declared_type='NSFNanoStore*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dictionaryDescription'>
<retval type='@' declared_type='NSFOrderedDictionary*'/>
</method>
<method selector='discardUnsavedChanges'>
<retval type='v' declared_type='void'/>
</method>
<method selector='filePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hasUnsavedChanges'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initStoreWithType:path:'>
<arg index='0' type='i' declared_type='NSFNanoStoreType' name='theType'/>
<arg index='1' type='@' declared_type='NSString*' name='thePath'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isClosed'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nanoEngineProcessingMode'>
<retval type='i' declared_type='NSFEngineProcessingMode'/>
</method>
<method selector='nanoStoreEngine'>
<retval type='@' declared_type='NSFNanoEngine*'/>
</method>
<method selector='objectsOfClassNamed:'>
<arg index='0' type='@' declared_type='NSString*' name='theClassName'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectsOfClassNamed:usingSortDescriptors:'>
<arg index='0' type='@' declared_type='NSString*' name='theClassName'/>
<arg index='1' type='@' declared_type='NSArray*' name='theSortDescriptors'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectsWithKeysInArray:'>
<arg index='0' type='@' declared_type='NSArray*' name='theKeys'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='openWithError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rebuildIndexesAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeAllObjectsFromStoreAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeObject:error:'>
<arg index='0' type='@' declared_type='id' name='theObject'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeObjectsInArray:error:'>
<arg index='0' type='@' declared_type='NSArray*' name='theObjects'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeObjectsWithKeysInArray:error:'>
<arg index='0' type='@' declared_type='NSArray*' name='theKeys'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rollbackTransactionAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='saveInterval'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='saveStoreToDirectoryAtPath:compactDatabase:error:'>
<arg index='0' type='@' declared_type='NSString*' name='thePath'/>
<arg index='1' type='B' declared_type='BOOL' name='shouldCompact'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError' type_modifier='o'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setNanoEngineProcessingMode:'>
<arg index='0' type='i' declared_type='NSFEngineProcessingMode' name='nanoEngineProcessingMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNanoStoreEngine:'>
<arg index='0' type='@' declared_type='NSFNanoEngine*' name='nanoStoreEngine'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSaveInterval:'>
<arg index='0' type='I' declared_type='NSUInteger' name='saveInterval'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSFOrderedDictionary'>
<method selector='insertObject:forKey:atIndex:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<arg index='1' type='@' declared_type='id' name='aKey'/>
<arg index='2' type='I' declared_type='NSUInteger' name='anIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='keyAtIndex:'>
<arg index='0' type='I' declared_type='NSUInteger' name='anIndex'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='reverseKeyEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
</class>
<class name='NSObject'>
<method selector='hudWasHidden:'>
<arg index='0' type='@' declared_type='MBProgressHUD*' name='hud'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='theDictionary'/>
<arg index='1' type='@' declared_type='NSString*' name='aKey'/>
<arg index='2' type='@' declared_type='NSFNanoStore*' name='theStore'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='nanoObjectDictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='nanoObjectKey'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rootObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='REMenu'>
<method selector='animationDuration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='borderColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='borderWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='close'>
<retval type='v' declared_type='void'/>
</method>
<method selector='closeCompletionHandler'>
<retval function_pointer='true' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='closeWithCompletion:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(void)' name='completion'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='cornerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='font'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='highlightedBackgroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='highlightedSeparatorColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='highlightedTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='highlightedTextShadowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='highlightedTextShadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='imageOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='initWithItems:'>
<arg index='0' type='@' declared_type='NSArray*' name='items'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isOpen'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='items'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='separatorColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='separatorHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setAnimationDuration:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='animationDuration'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='backgroundColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='borderColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderWidth:'>
<arg index='0' type='f' declared_type='CGFloat' name='borderWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCloseCompletionHandler:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(void)' name='closeCompletionHandler'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCornerRadius:'>
<arg index='0' type='f' declared_type='CGFloat' name='cornerRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg index='0' type='@' declared_type='UIFont*' name='font'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedBackgroundColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='highlightedBackgroundColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedSeparatorColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='highlightedSeparatorColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedTextColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='highlightedTextColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedTextShadowColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='highlightedTextShadowColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedTextShadowOffset:'>
<arg index='0' type='{CGSize=ff}' declared_type='CGSize' name='highlightedTextShadowOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageOffset:'>
<arg index='0' type='{CGSize=ff}' declared_type='CGSize' name='imageOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItemHeight:'>
<arg index='0' type='f' declared_type='CGFloat' name='itemHeight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItems:'>
<arg index='0' type='@' declared_type='NSArray*' name='items'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSeparatorColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='separatorColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSeparatorHeight:'>
<arg index='0' type='f' declared_type='CGFloat' name='separatorHeight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='shadowColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowOffset:'>
<arg index='0' type='{CGSize=ff}' declared_type='CGSize' name='shadowOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowOpacity:'>
<arg index='0' type='f' declared_type='CGFloat' name='shadowOpacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowRadius:'>
<arg index='0' type='f' declared_type='CGFloat' name='shadowRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleFont:'>
<arg index='0' type='@' declared_type='UIFont*' name='subtitleFont'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleHighlightedTextColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='subtitleHighlightedTextColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleHighlightedTextShadowColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='subtitleHighlightedTextShadowColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleHighlightedTextShadowOffset:'>
<arg index='0' type='{CGSize=ff}' declared_type='CGSize' name='subtitleHighlightedTextShadowOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleTextAlignment:'>
<arg index='0' type='i' declared_type='NSTextAlignment' name='subtitleTextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleTextColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='subtitleTextColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleTextOffset:'>
<arg index='0' type='{CGSize=ff}' declared_type='CGSize' name='subtitleTextOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleTextShadowColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='subtitleTextShadowColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleTextShadowOffset:'>
<arg index='0' type='{CGSize=ff}' declared_type='CGSize' name='subtitleTextShadowOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:'>
<arg index='0' type='i' declared_type='NSTextAlignment' name='textAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='textColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextOffset:'>
<arg index='0' type='{CGSize=ff}' declared_type='CGSize' name='textOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextShadowColor:'>
<arg index='0' type='@' declared_type='UIColor*' name='textShadowColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextShadowOffset:'>
<arg index='0' type='{CGSize=ff}' declared_type='CGSize' name='textShadowOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWaitUntilAnimationIsComplete:'>
<arg index='0' type='B' declared_type='BOOL' name='waitUntilAnimationIsComplete'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='shadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='shadowOpacity'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='shadowRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='showFromNavigationController:'>
<arg index='0' type='@' declared_type='UINavigationController*' name='navigationController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showFromRect:inView:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' name='rect'/>
<arg index='1' type='@' declared_type='UIView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showInView:'>
<arg index='0' type='@' declared_type='UIView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subtitleFont'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='subtitleHighlightedTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='subtitleHighlightedTextShadowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='subtitleHighlightedTextShadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='subtitleTextAlignment'>
<retval type='i' declared_type='NSTextAlignment'/>
</method>
<method selector='subtitleTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='subtitleTextOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='subtitleTextShadowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='subtitleTextShadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='textAlignment'>
<retval type='i' declared_type='NSTextAlignment'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='textOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='textShadowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='textShadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='waitUntilAnimationIsComplete'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='REMenuContainerView'>
<method selector='navigationBar'>
<retval type='@' declared_type='UINavigationBar*'/>
</method>
<method selector='setNavigationBar:'>
<arg index='0' type='@' declared_type='UINavigationBar*' name='navigationBar'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='REMenuItem'>
<method selector='action'>
<retval function_pointer='true' type='@?' declared_type='void (^)(REMenuItem *)'>
<arg type='@' declared_type='REMenuItem*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='higlightedImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='image'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='initWithTitle:image:highlightedImage:action:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<arg index='1' type='@' declared_type='UIImage*' name='image'/>
<arg index='2' type='@' declared_type='UIImage*' name='higlightedImage'/>
<arg index='3' function_pointer='true' type='@?' declared_type='void (^)(REMenuItem *)' name='action'>
<arg type='@' declared_type='REMenuItem*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTitle:subtitle:image:highlightedImage:action:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<arg index='1' type='@' declared_type='NSString*' name='subtitle'/>
<arg index='2' type='@' declared_type='UIImage*' name='image'/>
<arg index='3' type='@' declared_type='UIImage*' name='higlightedImage'/>
<arg index='4' function_pointer='true' type='@?' declared_type='void (^)(REMenuItem *)' name='action'>
<arg type='@' declared_type='REMenuItem*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAction:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(REMenuItem *)' name='action'>
<arg type='@' declared_type='REMenuItem*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHiglightedImage:'>
<arg index='0' type='@' declared_type='UIImage*' name='higlightedImage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='UIImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitle:'>
<arg index='0' type='@' declared_type='NSString*' name='subtitle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg index='0' type='i' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subtitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tag'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='REMenuItemView'>
<method selector='imageView'>
<retval type='@' declared_type='UIImageView*'/>
</method>
<method selector='initWithFrame:menu:hasSubtitle:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' name='frame'/>
<arg index='1' type='@' declared_type='REMenu*' name='menu'/>
<arg index='2' type='B' declared_type='BOOL' name='hasSubtitle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='item'>
<retval type='@' declared_type='REMenuItem*'/>
</method>
<method selector='menu'>
<retval type='@' declared_type='REMenu*'/>
</method>
<method selector='separatorView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='setImageView:'>
<arg index='0' type='@' declared_type='UIImageView*' name='imageView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItem:'>
<arg index='0' type='@' declared_type='REMenuItem*' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenu:'>
<arg index='0' type='@' declared_type='REMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSeparatorView:'>
<arg index='0' type='@' declared_type='UIView*' name='separatorView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleLabel:'>
<arg index='0' type='@' declared_type='UILabel*' name='subtitleLabel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleLabel:'>
<arg index='0' type='@' declared_type='UILabel*' name='titleLabel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subtitleLabel'>
<retval type='@' declared_type='UILabel*'/>
</method>
<method selector='titleLabel'>
<retval type='@' declared_type='UILabel*'/>
</method>
</class>
<class name='Reachability'>
<method selector='connectionRequired'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='currentReachabilityStatus'>
<retval type='I' declared_type='NetworkStatus'/>
</method>
<method selector='initWithReachabilityRef:'>
<arg index='0' type='^{__SCNetworkReachability=}' declared_type='SCNetworkReachabilityRef' name='ref'/>
<retval type='@' declared_type='Reachability*'/>
</method>
<method selector='isConnectionOnDemand'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isConnectionRequired'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqual:'>
<arg index='0' type='@' declared_type='Reachability*' name='r'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isInterventionRequired'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReachable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReachableViaWWAN'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReachableViaWiFi'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='reachabilityFlags'>
<retval type='I' declared_type='SCNetworkReachabilityFlags'/>
</method>
<method class_method='true' selector='reachabilityForInternetConnection'>
<retval type='@' declared_type='Reachability*'/>
</method>
<method class_method='true' selector='reachabilityForLocalWiFi'>
<retval type='@' declared_type='Reachability*'/>
</method>
<method class_method='true' selector='reachabilityWithAddress:'>
<arg const='true' index='0' type='^{sockaddr_in=CCS{in_addr=I}[8c]}' declared_type='struct sockaddr_in*' name='hostAddress'/>
<retval type='@' declared_type='Reachability*'/>
</method>
<method class_method='true' selector='reachabilityWithHostName:'>
<arg index='0' type='@' declared_type='NSString*' name='hostName'/>
<retval type='@' declared_type='Reachability*'/>
</method>
<method selector='setKey:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startNotifier'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stopNotifier'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='XMLReader'>
<method class_method='true' selector='dictionaryForXMLData:error:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='^@' declared_type='NSError**' name='errorPointer'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='dictionaryForXMLData:options:error:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='I' declared_type='XMLReaderOptions' name='options'/>
<arg index='2' type='^@' declared_type='NSError**' name='errorPointer'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='dictionaryForXMLString:error:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<arg index='1' type='^@' declared_type='NSError**' name='errorPointer'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='dictionaryForXMLString:options:error:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<arg index='1' type='I' declared_type='XMLReaderOptions' name='options'/>
<arg index='2' type='^@' declared_type='NSError**' name='errorPointer'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<informal_protocol name='MBProgressHUDDelegate'>
<method type='v12@0:4@8' selector='hudWasHidden:'>
<arg index='0' type='@' declared_type='MBProgressHUD*' name='hud'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSFNanoObjectProtocol'>
<method type='@20@0:4@8@12@16' selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='theDictionary'/>
<arg index='1' type='@' declared_type='NSString*' name='aKey'/>
<arg index='2' type='@' declared_type='NSFNanoStore*' name='theStore'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@8@0:4' selector='nanoObjectDictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type='@8@0:4' selector='nanoObjectKey'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='@8@0:4' selector='rootObject'>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
</signatures>
